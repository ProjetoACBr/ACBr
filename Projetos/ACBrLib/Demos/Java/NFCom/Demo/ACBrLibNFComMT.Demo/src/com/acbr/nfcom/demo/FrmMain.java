/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.acbr.nfcom.demo;

import com.acbr.ACBrSessao;
import com.acbr.nfcom.ACBrLibNFComMT;
import java.awt.Cursor;
import java.awt.Component;
import javax.swing.SwingWorker;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author rften
 */
public class FrmMain extends javax.swing.JFrame {

    private ACBrLibNFComMT acbrNFCom;

    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        initComponents();
        try {
            acbrNFCom = new ACBrLibNFComMT();
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rtbRespostas = new javax.swing.JTextArea();
        btnSalvar = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        btnCriarEnviar = new javax.swing.JButton();
        btnCarregarIni = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnEnviarEmail = new javax.swing.JButton();
        btnAssinar = new javax.swing.JButton();
        btnGerarChave = new javax.swing.JButton();
        btnEnviarSincrono = new javax.swing.JButton();
        btnCarregarXml = new javax.swing.JButton();
        btnImprimirPDF = new javax.swing.JButton();
        btnValidarRegra = new javax.swing.JButton();
        btnEnviarAssincrono = new javax.swing.JButton();
        btnLimparLista = new javax.swing.JButton();
        btnGerarXML = new javax.swing.JButton();
        btnSalvarPDFStream = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        btnStatusServ = new javax.swing.JButton();
        btnConsultarRecibo = new javax.swing.JButton();
        btnConsultaXml = new javax.swing.JButton();
        btnConsultaChave = new javax.swing.JButton();
        btnConsultarCadastro = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        btnCancelarNFCom = new javax.swing.JButton();
        btnCarregarEvento = new javax.swing.JButton();
        btnImprimirEvento = new javax.swing.JButton();
        btnEnviarEmailEvento = new javax.swing.JButton();
        btnEnviarEvento = new javax.swing.JButton();
        btnLimparListaEvento = new javax.swing.JButton();
        btnImprimirEventoPDF = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        btnImprimirInutilizacao = new javax.swing.JButton();
        btnInutilizar = new javax.swing.JButton();
        btnImprimirInutilizacaoPDF = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        btnDFePorChave = new javax.swing.JButton();
        btnDFePorNSU = new javax.swing.JButton();
        btnDFePorUltNSU = new javax.swing.JButton();
        btnCarregarConfiguracoes = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        ckbAtualizarXML = new javax.swing.JPanel();
        ckbAttXML = new javax.swing.JCheckBox();
        ckbExibirErroSchema = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txtFormatoAlerta = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmbFormaEmissao = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cmbModeloDocumento = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cmbVersaoDF = new javax.swing.JComboBox<>();
        ckbRetirarAcentos = new javax.swing.JCheckBox();
        ckbSalvar = new javax.swing.JCheckBox();
        txtLogs = new javax.swing.JTextField();
        btnSelectLog = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtSchemaPath = new javax.swing.JTextField();
        btnSelectSchema = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        cmbUfDestino = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        cmbSSlType = new javax.swing.JComboBox<>();
        nudTimeOut = new javax.swing.JSpinner();
        jLabel34 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        rdbHomologacao = new javax.swing.JRadioButton();
        rdbProducao = new javax.swing.JRadioButton();
        ckbVisualizar = new javax.swing.JCheckBox();
        ckbSalvarSOAP = new javax.swing.JCheckBox();
        jPanel22 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        txtProxyServidor = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        nudProxyPorta = new javax.swing.JSpinner();
        jLabel40 = new javax.swing.JLabel();
        txtProxyUsuario = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txtProxySenha = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        ckbAjustarAut = new javax.swing.JCheckBox();
        jLabel43 = new javax.swing.JLabel();
        nudAguardar = new javax.swing.JSpinner();
        jLabel44 = new javax.swing.JLabel();
        nudTentativas = new javax.swing.JSpinner();
        jLabel45 = new javax.swing.JLabel();
        nudIntervalos = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cmbCrypt = new javax.swing.JComboBox<>();
        cmbHttp = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        cmbXmlSign = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        txtCertPath = new javax.swing.JTextField();
        btnSelecionarCertificado = new javax.swing.JButton();
        txtDadosPFX = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtCertNumero = new javax.swing.JTextField();
        txtCertPassword = new javax.swing.JPasswordField();
        btnObterCertificados = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        ckbSalvarArqs = new javax.swing.JCheckBox();
        ckbPastaMensal = new javax.swing.JCheckBox();
        ckbAdicionaLiteral = new javax.swing.JCheckBox();
        ckbEmissaoPathNFCom = new javax.swing.JCheckBox();
        ckbSalvaPathEvento = new javax.swing.JCheckBox();
        ckbSepararPorCNPJ = new javax.swing.JCheckBox();
        ckbSepararPorModelo = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        txtArqNFCom = new javax.swing.JTextField();
        btnArqNFCom = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtArqInu = new javax.swing.JTextField();
        btnArqInu = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtArqEvento = new javax.swing.JTextField();
        btnArqEvento = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        txtSalvarXMLDistribuicao = new javax.swing.JTextField();
        btnArqSalvarRetorno = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtLogomarca = new javax.swing.JTextField();
        btnLogomarca = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        rdbFortes = new javax.swing.JRadioButton();
        rdbEscPos = new javax.swing.JRadioButton();
        rdbFortesA4 = new javax.swing.JRadioButton();
        jPanel12 = new javax.swing.JPanel();
        rdbRetrato = new javax.swing.JRadioButton();
        rdbPaisagem = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        cmbModelo = new javax.swing.JComboBox<>();
        cmbPagCodigo = new javax.swing.JComboBox<>();
        lblModelo = new javax.swing.JLabel();
        lblPagCodigo = new javax.swing.JLabel();
        lblPorta = new javax.swing.JLabel();
        cmbPorta = new javax.swing.JComboBox<>();
        nudColunas = new javax.swing.JSpinner();
        lblColunas = new javax.swing.JLabel();
        lblEspacos = new javax.swing.JLabel();
        lblBuffer = new javax.swing.JLabel();
        nudBuffer = new javax.swing.JSpinner();
        lblLinhasPular = new javax.swing.JLabel();
        nudLinhasPular = new javax.swing.JSpinner();
        nudEspacos = new javax.swing.JSpinner();
        cbxControlePorta = new javax.swing.JCheckBox();
        cbxCortarPapel = new javax.swing.JCheckBox();
        cbxTraduzirTags = new javax.swing.JCheckBox();
        cbxIgnorarTags = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        nudPorta = new javax.swing.JSpinner();
        txtUsuario = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        ckbSSL = new javax.swing.JCheckBox();
        ckbTLS = new javax.swing.JCheckBox();
        txtSenha = new javax.swing.JPasswordField();
        jLabel24 = new javax.swing.JLabel();
        txtAssunto = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtMensagem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ACBrLibNFCom Demo");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(744, 588));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Respostas"));

        rtbRespostas.setColumns(20);
        rtbRespostas.setRows(5);
        jScrollPane1.setViewportView(rtbRespostas);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
        );

        btnSalvar.setText("Salvar Configurações");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jTabbedPane2.setToolTipText("");
        jTabbedPane2.setName("Envio"); // NOI18N

        btnCriarEnviar.setText("Criar e Enviar");
        btnCriarEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarEnviarActionPerformed(evt);
            }
        });

        btnCarregarIni.setText("Carregar INI NFCom");
        btnCarregarIni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarIniActionPerformed(evt);
            }
        });

        btnImprimir.setText("Imprimir DANFE-COM");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnEnviarEmail.setText("Enviar NFCom Email");
        btnEnviarEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarEmailActionPerformed(evt);
            }
        });

        btnAssinar.setText("Assinar NFCom");
        btnAssinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssinarActionPerformed(evt);
            }
        });

        btnGerarChave.setText("Gerar Chave NFCom");
        btnGerarChave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarChaveActionPerformed(evt);
            }
        });

        btnEnviarSincrono.setLabel("Enviar Sincrono");
        btnEnviarSincrono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarSincronoActionPerformed(evt);
            }
        });

        btnCarregarXml.setText("Carregar Xml NFCom");
        btnCarregarXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarXmlActionPerformed(evt);
            }
        });

        btnImprimirPDF.setText("Imprimir PDF DANFE-COM");
        btnImprimirPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirPDFActionPerformed(evt);
            }
        });

        btnValidarRegra.setLabel("Val. Regra de Neg.");
        btnValidarRegra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarRegraActionPerformed(evt);
            }
        });

        btnEnviarAssincrono.setLabel("Enviar Assincrono");
        btnEnviarAssincrono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarAssincronoActionPerformed(evt);
            }
        });

        btnLimparLista.setText("Limpar Lista NFCom");
        btnLimparLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparListaActionPerformed(evt);
            }
        });

        btnGerarXML.setText("Gerar XML");
        btnGerarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarXMLActionPerformed(evt);
            }
        });

        btnSalvarPDFStream.setText("Salvar PDF Stream");
        btnSalvarPDFStream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPDFStreamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnValidarRegra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCarregarIni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCriarEnviar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEnviarSincrono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGerarXML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCarregarXml, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnEnviarAssincrono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnImprimirPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAssinar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSalvarPDFStream, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEnviarEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnLimparLista, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGerarChave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(21, 21, 21))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCriarEnviar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCarregarXml)
                        .addComponent(btnGerarXML)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviarSincrono)
                    .addComponent(btnEnviarAssincrono)
                    .addComponent(btnCarregarIni))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir)
                    .addComponent(btnEnviarEmail)
                    .addComponent(btnImprimirPDF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnValidarRegra)
                    .addComponent(btnAssinar)
                    .addComponent(btnGerarChave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimparLista)
                    .addComponent(btnSalvarPDFStream))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Envio", jPanel14);

        btnStatusServ.setText(" Status de Serviço");
        btnStatusServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusServActionPerformed(evt);
            }
        });

        btnConsultarRecibo.setText("Consultar Recibo");
        btnConsultarRecibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarReciboActionPerformed(evt);
            }
        });

        btnConsultaXml.setText("Consultar com Xml");
        btnConsultaXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaXmlActionPerformed(evt);
            }
        });

        btnConsultaChave.setText("Consultar com Chave");
        btnConsultaChave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaChaveActionPerformed(evt);
            }
        });

        btnConsultarCadastro.setLabel("Consultar Cadastro");
        btnConsultarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarCadastroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnStatusServ, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(btnConsultarRecibo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnConsultaXml, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConsultarCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsultaChave)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStatusServ)
                    .addComponent(btnConsultaXml)
                    .addComponent(btnConsultaChave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultarRecibo)
                    .addComponent(btnConsultarCadastro))
                .addContainerGap(120, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Consultas", jPanel15);

        btnCancelarNFCom.setText("Cancelar NFCom");
        btnCancelarNFCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarNFComActionPerformed(evt);
            }
        });

        btnCarregarEvento.setLabel("Carregar Evento");
        btnCarregarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarEventoActionPerformed(evt);
            }
        });

        btnImprimirEvento.setLabel("Imprimir Evento");
        btnImprimirEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirEventoActionPerformed(evt);
            }
        });

        btnEnviarEmailEvento.setLabel("Enviar Evento Email");
        btnEnviarEmailEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarEmailEventoActionPerformed(evt);
            }
        });

        btnEnviarEvento.setLabel("Enviar Evento");
        btnEnviarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarEventoActionPerformed(evt);
            }
        });

        btnLimparListaEvento.setLabel("Limpar Lista Eventos");
        btnLimparListaEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparListaEventoActionPerformed(evt);
            }
        });

        btnImprimirEventoPDF.setLabel("Imprimir PDF Evento");
        btnImprimirEventoPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirEventoPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnImprimirEvento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCarregarEvento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelarNFCom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEnviarEmailEvento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEnviarEvento, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(btnLimparListaEvento, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(btnImprimirEventoPDF, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                .addGap(144, 144, 144))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarNFCom)
                    .addComponent(btnEnviarEvento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimparListaEvento)
                    .addComponent(btnCarregarEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimirEvento)
                    .addComponent(btnImprimirEventoPDF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEnviarEmailEvento)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Eventos", jPanel16);

        btnImprimirInutilizacao.setLabel("Imprimir Inutilização");
        btnImprimirInutilizacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirInutilizacaoActionPerformed(evt);
            }
        });

        btnInutilizar.setText("Inutilizar Numeração");
        btnInutilizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInutilizarActionPerformed(evt);
            }
        });

        btnImprimirInutilizacaoPDF.setLabel("Imprimir PDF Inutilização");
        btnImprimirInutilizacaoPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirInutilizacaoPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnImprimirInutilizacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInutilizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimirInutilizacaoPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(144, 144, 144))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInutilizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimirInutilizacao)
                    .addComponent(btnImprimirInutilizacaoPDF))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Inutilização", jPanel17);

        btnDFePorChave.setLabel("Por Chave");
        btnDFePorChave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDFePorChaveActionPerformed(evt);
            }
        });

        btnDFePorNSU.setLabel("Por NSU");
        btnDFePorNSU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDFePorNSUActionPerformed(evt);
            }
        });

        btnDFePorUltNSU.setText("Por Ult. NSU");
        btnDFePorUltNSU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDFePorUltNSUActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDFePorChave, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDFePorNSU, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDFePorUltNSU, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDFePorChave)
                    .addComponent(btnDFePorNSU)
                    .addComponent(btnDFePorUltNSU))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Distribuição DFe", jPanel18);

        btnCarregarConfiguracoes.setLabel("Carregar Configurações");
        btnCarregarConfiguracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarConfiguracoesActionPerformed(evt);
            }
        });

        ckbAttXML.setText("Atualizar XML Cancelado");

        ckbExibirErroSchema.setText("Exibir Erro Schema");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Formato Alerta");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Forma de Emissão");

        cmbFormaEmissao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "teNormal", "teContingencia", "teSVCAN", "teDPEC", "teFSDA", "teSCAN", "teSVCRS", "teSVCSP", "teOffLine", " ", " " }));
        cmbFormaEmissao.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Modelo Documento Fiscal");

        cmbModeloDocumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "moNFe", "moNFCe", " " }));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Versão Documento Fiscal");

        cmbVersaoDF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ve200", "ve300", "ve310", "ve400" }));
        cmbVersaoDF.setSelectedIndex(3);
        cmbVersaoDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVersaoDFActionPerformed(evt);
            }
        });

        ckbRetirarAcentos.setText("Retirar Acentos dos XMLs enviados");

        ckbSalvar.setText("Salvar Arquivos de Envio e Resposta");

        btnSelectLog.setText("btnSelectLog");
        btnSelectLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectLogActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Pasta dos Logs");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Pasta dos Schemas");

        btnSelectSchema.setText("jButton1");
        btnSelectSchema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectSchemaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ckbAtualizarXMLLayout = new javax.swing.GroupLayout(ckbAtualizarXML);
        ckbAtualizarXML.setLayout(ckbAtualizarXMLLayout);
        ckbAtualizarXMLLayout.setHorizontalGroup(
            ckbAtualizarXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ckbAtualizarXMLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ckbAtualizarXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFormatoAlerta)
                    .addGroup(ckbAtualizarXMLLayout.createSequentialGroup()
                        .addGroup(ckbAtualizarXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ckbAtualizarXMLLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtLogs))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelectLog, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ckbAtualizarXMLLayout.createSequentialGroup()
                        .addGroup(ckbAtualizarXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ckbAtualizarXMLLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtSchemaPath))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelectSchema, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ckbAtualizarXMLLayout.createSequentialGroup()
                        .addGroup(ckbAtualizarXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbSalvar)
                            .addComponent(ckbRetirarAcentos)
                            .addComponent(jLabel6)
                            .addComponent(ckbAttXML)
                            .addComponent(ckbExibirErroSchema)
                            .addComponent(jLabel7)
                            .addComponent(cmbFormaEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(cmbModeloDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(cmbVersaoDF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 79, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ckbAtualizarXMLLayout.setVerticalGroup(
            ckbAtualizarXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ckbAtualizarXMLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckbAttXML)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbExibirErroSchema)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFormatoAlerta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbFormaEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbModeloDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbVersaoDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbRetirarAcentos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ckbAtualizarXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLogs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectLog))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ckbAtualizarXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSchemaPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectSchema))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Geral", ckbAtualizarXML);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("Uf Destino");

        cmbUfDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setText("SSL Type");

        cmbSSlType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LT_all", "LT_SSLv2", "LT_SSLv3", "LT_TSLv1", "LT_TSLv1_1", "LT_TSLv1_2", "LT_SSHv2" }));

        nudTimeOut.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel34.setText("TimeOut");

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ambiente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel20.setToolTipText("Ambiente");
        jPanel20.setFocusCycleRoot(true);
        jPanel20.setName("Ambiente"); // NOI18N

        buttonGroup1.add(rdbHomologacao);
        rdbHomologacao.setLabel("Homologação");

        buttonGroup1.add(rdbProducao);
        rdbProducao.setText("Produção");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbHomologacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rdbProducao)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbProducao)
                    .addComponent(rdbHomologacao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rdbProducao.getAccessibleContext().setAccessibleDescription("");

        ckbVisualizar.setLabel("Visualizar Mensagem");

        ckbSalvarSOAP.setText("Salvar envelope SOAP");

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Proxy", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel22.setToolTipText("Proxy");
        jPanel22.setName("Ambiente"); // NOI18N

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel38.setText("Servidor");

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel39.setText("Porta");

        nudProxyPorta.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel40.setText("Usuário");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel41.setText("Senha");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProxyUsuario)
                    .addComponent(txtProxySenha)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProxyServidor)
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel40)
                                    .addComponent(jLabel41))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39)
                            .addComponent(nudProxyPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProxyServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nudProxyPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProxyUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProxySenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Retorno de Envio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        ckbAjustarAut.setText("Ajustar Automaticamente prop. \"Aguardar\"");

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel43.setText("Aguardar");

        nudAguardar.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel44.setText("Tentativas");

        nudTentativas.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel45.setText("Intervalo");

        nudIntervalos.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nudAguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nudTentativas, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nudIntervalos, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ckbAjustarAut))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckbAjustarAut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nudAguardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nudTentativas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nudIntervalos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32)
                                    .addComponent(cmbUfDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel33)
                                    .addComponent(cmbSSlType, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nudTimeOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(ckbSalvarSOAP)
                            .addComponent(ckbVisualizar))
                        .addGap(0, 51, Short.MAX_VALUE))
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nudTimeOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSSlType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbUfDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbVisualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbSalvarSOAP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("WebServices", jPanel6);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("CryptLib");

        cmbCrypt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "cryNone", "cryOpenSSL", "cryCapicom", "cryWinCrypt" }));

        cmbHttp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "httpNone", "httpWinINet", "httpWinHttp", "httpOpenSSL", "httpIndy" }));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("HttpLib");

        cmbXmlSign.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "xsNone", "xsXmlSec", "xsMsXml", "xsMsXmlCapicom", "xsLibXml2" }));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("XmlSignLib");

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Certificados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel19.setToolTipText("Certificados");
        jPanel19.setName("DANFE-COM"); // NOI18N

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("Caminho PFX");

        btnSelecionarCertificado.setText("btnSelectLog");
        btnSelecionarCertificado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarCertificadoActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("Dados PFX");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("Senha");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("Número de Série");

        txtCertPassword.setText("jPasswordField1");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtCertPath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelecionarCertificado, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(txtCertNumero)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31))
                .addGap(0, 187, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addComponent(jLabel29)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(txtCertPassword)
            .addComponent(txtDadosPFX)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCertPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarCertificado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDadosPFX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addGap(1, 1, 1)
                .addComponent(txtCertPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCertNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        btnObterCertificados.setActionCommand("Obter Certificados");
        btnObterCertificados.setLabel("Obter Certificados");
        btnObterCertificados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObterCertificadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel17)
                                .addComponent(jLabel26)
                                .addComponent(cmbHttp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbCrypt, 0, 163, Short.MAX_VALUE)
                                .addComponent(jLabel27)
                                .addComponent(cmbXmlSign, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnObterCertificados))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addGap(1, 1, 1)
                .addComponent(cmbCrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbHttp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbXmlSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnObterCertificados)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Certificados", jPanel7);

        ckbSalvarArqs.setLabel("Salvar Arquivos em Pastas Separadas");

        ckbPastaMensal.setLabel("Criar Pastas Mensalmente");

        ckbAdicionaLiteral.setLabel("Adicionar Literal no nome das pastas");

        ckbEmissaoPathNFCom.setText("Salvar Documento pelo campo Data de Emissão");

        ckbSalvaPathEvento.setText("Salvar Arquivos de Eventos");

        ckbSepararPorCNPJ.setText("Separar Arqs pelo CNPJ do Certificado");

        ckbSepararPorModelo.setText("Separar Arqs pelo Modelo do Documento");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Pasta Arquivos NFCom");

        btnArqNFCom.setText("btnSelectLog");
        btnArqNFCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArqNFComActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Pasta Arquivos Inutilização");

        btnArqInu.setText("btnSelectLog");
        btnArqInu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArqInuActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Pasta Arquivos Evento");
        jLabel16.setRequestFocusEnabled(false);

        btnArqEvento.setText("btnSelectLog");
        btnArqEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArqEventoActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel42.setText("Salvar XML Distribuição");
        jLabel42.setRequestFocusEnabled(false);

        btnArqSalvarRetorno.setText("btnSelectLog");
        btnArqSalvarRetorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArqSalvarRetornoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(0, 130, Short.MAX_VALUE))
                            .addComponent(txtArqNFCom))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnArqNFCom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(0, 102, Short.MAX_VALUE))
                            .addComponent(txtArqInu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnArqInu, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbSalvarArqs)
                            .addComponent(ckbPastaMensal)
                            .addComponent(ckbAdicionaLiteral)
                            .addComponent(ckbEmissaoPathNFCom)
                            .addComponent(ckbSalvaPathEvento)
                            .addComponent(ckbSepararPorCNPJ)
                            .addComponent(ckbSepararPorModelo)
                            .addComponent(jLabel42))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSalvarXMLDistribuicao, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(0, 129, Short.MAX_VALUE))
                            .addComponent(txtArqEvento, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnArqEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnArqSalvarRetorno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(ckbSalvarArqs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbPastaMensal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbAdicionaLiteral)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbEmissaoPathNFCom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbSalvaPathEvento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbSepararPorCNPJ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbSepararPorModelo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArqNFCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArqNFCom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArqInu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArqInu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArqEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArqEvento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalvarXMLDistribuicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArqSalvarRetorno))
                .addGap(0, 125, Short.MAX_VALUE))
        );

        ckbEmissaoPathNFCom.getAccessibleContext().setAccessibleDescription("");

        jTabbedPane3.addTab("Arquivos", jPanel9);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Configurações", jPanel1);

        btnLogomarca.setText("jButton1");
        btnLogomarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogomarcaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Logomarca");

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DANFCe", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel11.setToolTipText("DANFE-COM");
        jPanel11.setName("DANFE-COM"); // NOI18N

        buttonGroup9.add(rdbFortes);
        rdbFortes.setText("Fortes");

        buttonGroup9.add(rdbEscPos);
        rdbEscPos.setActionCommand("EscPos");
        rdbEscPos.setLabel("EscPos");

        buttonGroup9.add(rdbFortesA4);
        rdbFortesA4.setText("Fortes A4");
        rdbFortesA4.setActionCommand("EscPos");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbFortes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rdbEscPos)
                .addGap(28, 28, 28)
                .addComponent(rdbFortesA4)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbFortes)
                    .addComponent(rdbEscPos)
                    .addComponent(rdbFortesA4))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DANFE-COM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel12.setToolTipText("DANFE-COM");
        jPanel12.setName("DANFE-COM"); // NOI18N

        buttonGroup8.add(rdbRetrato);
        rdbRetrato.setActionCommand("Retrato");
        rdbRetrato.setLabel("Retrato");

        buttonGroup8.add(rdbPaisagem);
        rdbPaisagem.setText("Paisagem");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbRetrato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(rdbPaisagem)
                .addGap(26, 26, 26))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbRetrato)
                    .addComponent(rdbPaisagem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos Printer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel13.setToolTipText("PosPrinter");
        jPanel13.setName("DANFE-COM"); // NOI18N

        cmbModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ppTexto", "ppEscPosEpson", "ppEscBematec", "ppEscDaruma", "ppEscVox", "ppEscDiebold", "ppEscEpsonP2", "ppCustomPos", "ppEscPosStar", "ppEscZJiang", "ppEscGPrinter", "ppEscDatecs", " " }));
        cmbModelo.setToolTipText("cmbModelo");

        cmbPagCodigo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pcNone", "pc437", "pc850", "pc852", "pc860", "pcUTF8", "pc1252" }));
        cmbPagCodigo.setToolTipText("cmbModelo");

        lblModelo.setText("Modelo");

        lblPagCodigo.setText("Pag. Código");

        lblPorta.setText("Porta");

        cmbPorta.setEditable(true);
        cmbPorta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM1", "COM2", "LPT1", "LPT2", "\\\\localhost\\Epson", "c:\\temp\\ecf.txt", "TCP:192.168.0.31:9100" }));

        nudColunas.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        lblColunas.setText("Colunas");

        lblEspacos.setText("Espaços");

        lblBuffer.setText("Buffer");

        nudBuffer.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        lblLinhasPular.setText("Linhas Pular");

        nudLinhasPular.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        nudEspacos.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        cbxControlePorta.setText("Controle Porta");

        cbxCortarPapel.setText("Cortar Papel");

        cbxTraduzirTags.setText("Traduzir Tags");

        cbxIgnorarTags.setLabel("Ignorar Tags");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel13Layout.createSequentialGroup()
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmbModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblModelo))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPagCodigo)
                                .addComponent(cmbPagCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblPorta, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cmbPorta, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(lblColunas)
                        .addGap(18, 18, 18)
                        .addComponent(lblEspacos)
                        .addGap(18, 18, 18)
                        .addComponent(lblBuffer)
                        .addGap(42, 42, 42)
                        .addComponent(lblLinhasPular))
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addComponent(nudColunas, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nudEspacos, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(nudBuffer, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(nudLinhasPular, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxControlePorta)
                                .addComponent(cbxCortarPapel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxIgnorarTags)
                                .addComponent(cbxTraduzirTags)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelo)
                    .addComponent(lblPagCodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbPagCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPorta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColunas)
                    .addComponent(lblEspacos)
                    .addComponent(lblBuffer)
                    .addComponent(lblLinhasPular))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nudColunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nudBuffer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nudEspacos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nudLinhasPular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxControlePorta)
                    .addComponent(cbxTraduzirTags))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCortarPapel)
                    .addComponent(cbxIgnorarTags))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbModelo.getAccessibleContext().setAccessibleName("cmbModelo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtLogomarca))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLogomarca, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLogomarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogomarca))
                .addGap(77, 77, 77)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(390, Short.MAX_VALUE)))
        );

        jPanel13.getAccessibleContext().setAccessibleName("PosPrinter");

        jTabbedPane1.addTab("Documento Auxiliar", jPanel2);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configurações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Nome");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Host SMTP");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Email");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Porta");

        nudPorta.setModel(new javax.swing.SpinnerNumberModel(5000, 1, null, 1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Usuário");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Senha");

        ckbSSL.setText("SSL");

        ckbTLS.setText("TLS");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome)
                    .addComponent(txtEmail)
                    .addComponent(txtHost)
                    .addComponent(txtUsuario)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nudPorta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbSSL)
                            .addComponent(ckbTLS))
                        .addGap(0, 112, Short.MAX_VALUE))
                    .addComponent(txtSenha))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addGap(1, 1, 1)
                .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(ckbSSL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nudPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbTLS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addGap(1, 1, 1)
                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Assunto");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Mensagem");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(35, 35, 35))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMensagem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAssunto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAssunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 122, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Email", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCarregarConfiguracoes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCarregarConfiguracoes)
                            .addComponent(btnSalvar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("Envio");
        btnCarregarConfiguracoes.getAccessibleContext().setAccessibleName("Salvar Carregar Configurações");

        setSize(new java.awt.Dimension(827, 627));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try {
            // Altera as config de log
            Path pathLog = Paths.get(System.getProperty("user.dir"), "Log");
            if (!Files.isDirectory(pathLog)) {
                pathLog.toFile().mkdirs();
            }

            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "Porta", 0);
            acbrNFCom.configGravarValor(ACBrSessao.Proxy, "Porta", 0);
            
            acbrNFCom.configGravarValor(ACBrSessao.Principal, "LogNivel", 4);
            acbrNFCom.configGravarValor(ACBrSessao.Principal, "LogPath", pathLog.toString());
            acbrNFCom.configGravar();

            loadConfig();
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowActivated

    public boolean validacaoEmail(){
        if (txtHost.getText().equals(""))
        {
            //System.out.println("Informe Host SMTP");
            JOptionPane.showMessageDialog(null, "Informe Host SMTP", "Validação E-mail", JOptionPane.ERROR_MESSAGE);
            return false;
            
        } else if (txtUsuario.getText().equals("")){
            System.out.println("Informe Usuário");
            return false;
            
        } else if (txtSenha.getText().equals("")){
            System.out.println("Informe Senha");
            return false;
            
        } else if (txtNome.getText().equals("")){
            System.out.println("Informe Nome do Proprietario do e-mail");
            return false;
            
        } else if (txtEmail.getText().equals("")){
            System.out.println("Informe e-mail do Proprietario");
            return false;
            
        } else if (nudPorta.getValue().equals("")){
            System.out.println("Informe porta de conexão");
            return false;
            
        } else if (ckbSSL.isSelected()== false && ckbTLS.isSelected() == false){
            System.out.println("Informe o certificado SSL");
            System.out.println("Informe o certificado TLS");
            return false;
        }
        return true;
    }
    
    public boolean validacao(){
        
        if (txtSchemaPath.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Informe Path com Schema", "Validação", JOptionPane.ERROR_MESSAGE);
            return false;
            
        } else if ((txtCertPath.getText().equals("")) && (txtDadosPFX.getText().equals("")) ) {
            JOptionPane.showMessageDialog(null, "Informe o certificado", "Validação", JOptionPane.ERROR_MESSAGE);
            return false;
            
        } else if (txtCertPassword.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Informe a senha", "Validação", JOptionPane.ERROR_MESSAGE);
            return false;            
            
        }   else if (cmbCrypt.getSelectedItem().equals("cryNone")){
            JOptionPane.showMessageDialog(null, "Informe Criptografia", "Validação", JOptionPane.ERROR_MESSAGE);
            return false;
            
        }   else if (cmbHttp.getSelectedItem().equals("httpNone")){
            JOptionPane.showMessageDialog(null, "Informe Criptografia", "Validação", JOptionPane.ERROR_MESSAGE);
            return false;
            
        }   else if (cmbXmlSign.getSelectedItem().equals("xsNone")){
            JOptionPane.showMessageDialog(null, "Informe assinatura do XML", "Validação", JOptionPane.ERROR_MESSAGE);
            return false;
            
        }
        return true;
    }
    
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        final Loading loadingDialog = new Loading(this);
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                saveConfig();
                return null;
            }
            @Override
            protected void done() {
                loadingDialog.stop();
            }
        };
        worker.execute();
        loadingDialog.start();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnStatusServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusServActionPerformed
        final Loading loadingDialog = new Loading(this);

        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                if (!validacao()){
                    JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
                    return null;
                }        
                try{            
                    String ret = acbrNFCom.statusServico();
                    rtbRespostas.append(ret);
                } catch (Exception ex) {
                    Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                return null;
            }

            @Override
            protected void done() {
                loadingDialog.stop();
            }
        };

        loadingDialog.start();
        worker.execute();
    }//GEN-LAST:event_btnStatusServActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            acbrNFCom.limparLista();
            acbrNFCom.carregarXml(chooser.getSelectedFile().getAbsolutePath());
            acbrNFCom.imprimir();
            rtbRespostas.append("Impresso com sucesso.");            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnConsultaXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaXmlActionPerformed
        
        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            
            String ret = acbrNFCom.consultar(chooser.getSelectedFile().getAbsolutePath());
            rtbRespostas.append(ret);
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConsultaXmlActionPerformed

    private void btnConsultaChaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaChaveActionPerformed
        
        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try{
            String chaveOuNFCom = JOptionPane.showInputDialog(this, "Chave da NF-e:", 
                    "WebServices Consultar", JOptionPane.PLAIN_MESSAGE);
            
            String ret = acbrNFCom.consultar(chaveOuNFCom);
            rtbRespostas.append(ret);
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConsultaChaveActionPerformed

    private void btnConsultarReciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarReciboActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try{
            String recibo = JOptionPane.showInputDialog(this, "Número do recibo:", 
                    "WebServices Consultar", JOptionPane.PLAIN_MESSAGE);

            // String ret = acbrNFCom.consultarRecibo(recibo);
            String ret = "Método consultarRecibo não disponível em NFCom";
            rtbRespostas.append(ret);                 
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConsultarReciboActionPerformed

    private void btnCancelarNFComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarNFComActionPerformed
        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        String lote;
        String chave;
        String cnpj;
        String justificativa;

        try{
            lote = JOptionPane.showInputDialog(this, "Identificador de controle do Lote de envio do Evento:", 
                    "WebServices Eventos: Cancelamento", JOptionPane.PLAIN_MESSAGE);
            chave = JOptionPane.showInputDialog(this, "Chave da NF-e:", 
                    "WebServices Eventos: Cancelamento", JOptionPane.PLAIN_MESSAGE);
            cnpj = JOptionPane.showInputDialog(this, "CNPJ ou o CPF do autor do Evento:", 
                    "WebServices Eventos: Cancelamento", JOptionPane.PLAIN_MESSAGE);
            justificativa = JOptionPane.showInputDialog(this, "Justificativa do Cancelamento:", 
                    "WebServices Eventos: Cancelamento", JOptionPane.PLAIN_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            lote = ""; chave = ""; cnpj = ""; justificativa = "";
        }
        
        final String eLote = lote;
        final String eChave = chave;
        final String eCNPJ = cnpj;
        final String aJustificativa = justificativa;
        
        final Loading loadingDialog = new Loading(this);

        SwingWorker<String, Void> worker = new SwingWorker<String, Void>() {
            @Override
            protected String doInBackground() throws Exception {
                return acbrNFCom.cancelar(eChave, aJustificativa);
            }
            @Override
            protected void done() {
                try {
                    String ret = get();
                    rtbRespostas.append(ret);
                } catch (Exception ex) {
                    String ret = ex.getMessage();
                    rtbRespostas.append("ERRO: " + ret + "\n");
                    Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    loadingDialog.stop();
                }
            }
        };

        loadingDialog.start();
        worker.execute();
    }//GEN-LAST:event_btnCancelarNFComActionPerformed

    private void btnInutilizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInutilizarActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        try{
            String ano = JOptionPane.showInputDialog(this, "Ano", 
                    "WebServices Inutilização", JOptionPane.PLAIN_MESSAGE);
            String modelo = JOptionPane.showInputDialog(this, "Modelo", 
                    "WebServices Inutilização", JOptionPane.PLAIN_MESSAGE);            
            String serie = JOptionPane.showInputDialog(this, "Serie", 
                    "WebServices Inutilização", JOptionPane.PLAIN_MESSAGE);
            String numeroInicial = JOptionPane.showInputDialog(this, "Número Inicial", 
                    "WebServices Inutilização", JOptionPane.PLAIN_MESSAGE);
            String numeroFinal = JOptionPane.showInputDialog(this, "Número Final", 
                    "WebServices Inutilização", JOptionPane.PLAIN_MESSAGE);
            String eCNPJ = JOptionPane.showInputDialog(this, "CNPJ ou o CPF do autor do Emitente", 
                    "WebServices Inutilização", JOptionPane.PLAIN_MESSAGE);
            String aJustificativa = JOptionPane.showInputDialog(this, "Justificativa", 
                    "WebServices Inutilização", JOptionPane.PLAIN_MESSAGE);
            
            // String ret = acbrNFCom.inutilizar(eCNPJ,
            //         aJustificativa,
            //         Integer.parseInt(ano),
            //         Integer.parseInt(modelo),
            //         Integer.parseInt(serie),
            //         Integer.parseInt(numeroInicial),
            //         Integer.parseInt(numeroFinal));
            String ret = "Método inutilizar não disponível em NFCom";            
            rtbRespostas.append(ret);
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInutilizarActionPerformed

    private void btnEnviarEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarEmailActionPerformed

        if (!validacaoEmail()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            String destinatario = JOptionPane.showInputDialog(this, "Digite o email do destinatario", 
                    "Envio email", JOptionPane.PLAIN_MESSAGE);
            
            acbrNFCom.enviarEmail(destinatario,
                                chooser.getSelectedFile().getAbsolutePath(),
                                true,
                                txtAssunto.getText(),
                                "",
                                "",
                                txtMensagem.getText());  
            rtbRespostas.append("Enviado."); 
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnviarEmailActionPerformed

    private void btnCarregarConfiguracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarConfiguracoesActionPerformed
        final Loading loadingDialog = new Loading(this);
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                loadConfig();
                return null;
            }
            @Override
            protected void done() {
                loadingDialog.stop();
            }
        };
        worker.execute();
        loadingDialog.start();
    }//GEN-LAST:event_btnCarregarConfiguracoesActionPerformed

    private void btnLogomarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogomarcaActionPerformed
        try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("png", "logotipo (*.png)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);                      

            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            txtLogomarca.setText(chooser.getSelectedFile().toString());
            acbrNFCom.configGravarValor(ACBrSessao.DANFCom, "PathLogo", txtLogomarca.getText());
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLogomarcaActionPerformed

    private void btnSelectLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectLogActionPerformed

        try{
            JFileChooser chooser = new JFileChooser(); 
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Selecione o diretorio");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);           
     
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;            
            txtLogs.setText(chooser.getSelectedFile().toString());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathSalvar", txtLogs.getText()); 
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSelectLogActionPerformed

    private void btnSelectSchemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectSchemaActionPerformed

       try{
            JFileChooser chooser = new JFileChooser(); 
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Selecione o diretorio");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);           
     
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;            
            txtSchemaPath.setText(chooser.getSelectedFile().toString());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathSchemas", txtSchemaPath.getText());
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }       
        
    }//GEN-LAST:event_btnSelectSchemaActionPerformed

    private void btnArqNFComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArqNFComActionPerformed

        try{
            JFileChooser chooser = new JFileChooser(); 
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Selecione o diretorio");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);           
     
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;            
            //txtArqNFCom.setText(chooser.getSelectedFile().toString());
            //acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathNFCom", txtArqNFCom.getText());
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnArqNFComActionPerformed

    private void btnArqInuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArqInuActionPerformed

        try{
            JFileChooser chooser = new JFileChooser(); 
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Selecione o diretorio");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);           
     
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;            
            txtArqInu.setText(chooser.getSelectedFile().toString());
                        // acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathInu", txtArqInu.getText());
            // PathInu não existe na sessão NFCom
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnArqInuActionPerformed

    private void btnArqEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArqEventoActionPerformed

        try{
            JFileChooser chooser = new JFileChooser(); 
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Selecione o diretorio");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);           
     
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;            
            txtArqEvento.setText(chooser.getSelectedFile().toString());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathEvento", txtArqEvento.getText());
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnArqEventoActionPerformed

    private void btnSelecionarCertificadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarCertificadoActionPerformed

       try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("pfx", "Certificado igital (*.pfx)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            txtCertPath.setText(chooser.getSelectedFile().toString());
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "ArquivoPFX", txtCertPath.getText());
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSelecionarCertificadoActionPerformed

    private void btnObterCertificadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObterCertificadosActionPerformed
        
        try {   
            String ret = acbrNFCom.obterCertificados();
            rtbRespostas.append(ret);   
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnObterCertificadosActionPerformed

    private void btnCriarEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarEnviarActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
         try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("ini", "Arquivo Ini NFCom (*.ini)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            acbrNFCom.limparLista(); 
            acbrNFCom.carregarIni(chooser.getSelectedFile().getAbsolutePath());            
            
            String ret = acbrNFCom.enviar(1, false, false);
            rtbRespostas.append(ret);   
            
        } catch (Exception ex) {
            rtbRespostas.append(ex.getMessage());  
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }//GEN-LAST:event_btnCriarEnviarActionPerformed

    private void btnCarregarIniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarIniActionPerformed
        try {
         acbrNFCom.limparLista();
         JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("ini", "Arquivo ini (*.ini)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            acbrNFCom.limparLista();
            acbrNFCom.carregarIni(chooser.getSelectedFile().getAbsolutePath());
            rtbRespostas.append("dados carregados."); 
            
        }catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCarregarIniActionPerformed

    private void btnAssinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssinarActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try{
            acbrNFCom.assinar();
            rtbRespostas.append("ok."); 
        } catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAssinarActionPerformed

    private void btnGerarChaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarChaveActionPerformed
        
        SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");
        Date date = new Date(System.currentTimeMillis());
        System.out.println(formatter.format(date));
        
        try{
            
          String codUf = JOptionPane.showInputDialog("Digite o codigo da UF");
          String codNum = JOptionPane.showInputDialog("Digite o codigo da Númerico");
          String docMod = JOptionPane.showInputDialog("Digite o modelo do documento");
          String Serie =  JOptionPane.showInputDialog("Digite a serie do documento");
          String num = JOptionPane.showInputDialog("Digite o numero do documento");
          String tipoEmissao = JOptionPane.showInputDialog("Digite o tipo de emissão do documento");
          String cnpjCPF = JOptionPane.showInputDialog("Digite o CPF/CNPJ para Gerar a Chave");
          
          
          int uf = Integer.parseInt(codUf);
          int cod = Integer.parseInt(codNum);
          int doc = Integer.parseInt(docMod);
          int serie = Integer.parseInt(Serie);
          int numero = Integer.parseInt(num);
          int emissao = Integer.parseInt(tipoEmissao);
          
            // String ret = acbrNFCom.gerarChave(uf, cod, doc, serie, numero, emissao, date, cnpjCPF);
            String ret = "Método gerarChave não disponível em NFCom";
          rtbRespostas.append(ret);   
          
        }catch (Exception ex){
             Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGerarChaveActionPerformed

    private void btnEnviarSincronoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarSincronoActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try {
            
             String aLote = JOptionPane.showInputDialog("Digite o lote");
             int lote = Integer.parseInt(aLote);
             
             String ret = acbrNFCom.enviar(lote, false, true);
             rtbRespostas.append(ret);
             
        } catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnviarSincronoActionPerformed

    private void btnCarregarXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarXmlActionPerformed
        
        try {
         acbrNFCom.limparLista();
         JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo xml (*.xml)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            acbrNFCom.limparLista();
            acbrNFCom.carregarXml(chooser.getSelectedFile().getAbsolutePath());
            rtbRespostas.append("xml carregado."); 
 
        }catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCarregarXmlActionPerformed

    private void btnImprimirPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirPDFActionPerformed
        try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            acbrNFCom.limparLista();
            acbrNFCom.carregarXml(chooser.getSelectedFile().getAbsolutePath());
            acbrNFCom.imprimirPDF();
            rtbRespostas.append("Gerado com sucesso.");            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImprimirPDFActionPerformed

    private void btnValidarRegraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarRegraActionPerformed
        final Loading loadingDialog = new Loading(this);
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                try {
                    String ret= acbrNFCom.validarRegrasdeNegocios();
                    rtbRespostas.append(ret);
                }catch (Exception ex){
                    Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                return null;
            }
            @Override
            protected void done() {
                loadingDialog.stop();
            }
        };
        worker.execute();
        loadingDialog.start();
        
    }//GEN-LAST:event_btnValidarRegraActionPerformed

    private void btnEnviarAssincronoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarAssincronoActionPerformed
        
        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        try {
            
             String aLote = JOptionPane.showInputDialog("Digite o lote");
             int lote = Integer.parseInt(aLote);
             
             String ret = acbrNFCom.enviar(lote);
             rtbRespostas.append(ret);             
             
        } catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnviarAssincronoActionPerformed

    private void btnLimparListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparListaActionPerformed
        try{
            acbrNFCom.limparLista(); 
            rtbRespostas.append("Lista Limpa."); 
            
        }catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLimparListaActionPerformed

    private void btnCarregarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarEventoActionPerformed
       
        try {
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("ini", "Arquivo ini (*.ini)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            acbrNFCom.limparLista();
            // acbrNFCom.carregarEventoINI(chooser.getSelectedFile().getAbsolutePath());
            rtbRespostas.append("Método carregarEventoINI não disponível em NFCom");
            rtbRespostas.append("Evento carregado.");    
        }catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnCarregarEventoActionPerformed

    private void btnImprimirEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirEventoActionPerformed

      try {
            JFileChooser eArquivoXmlNFCom = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            eArquivoXmlNFCom.addChoosableFileFilter(filter);
            eArquivoXmlNFCom.setFileFilter(filter);
            
            if (eArquivoXmlNFCom.showOpenDialog(this) != JFileChooser.APPROVE_OPTION){
                return;
            }
            
            JFileChooser eArquivoXmlEvento = new JFileChooser();
            OpenFileFilter filterc = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            eArquivoXmlEvento.addChoosableFileFilter(filterc);
            eArquivoXmlEvento.setFileFilter(filterc);
            
            if (eArquivoXmlEvento.showOpenDialog(this) != JFileChooser.APPROVE_OPTION){
                return;
            }
            
            acbrNFCom.imprimirEvento(eArquivoXmlNFCom.getSelectedFile().getAbsolutePath(),eArquivoXmlEvento.getSelectedFile().getAbsolutePath());
            rtbRespostas.append("Impresso com sucesso."); ;
            
        }catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImprimirEventoActionPerformed

    private void btnEnviarEmailEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarEmailEventoActionPerformed

        if (!validacaoEmail()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try{
            JFileChooser eArquivoXmlNFCom = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            eArquivoXmlNFCom.addChoosableFileFilter(filter);
            eArquivoXmlNFCom.setFileFilter(filter);
            
            if (eArquivoXmlNFCom.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            
            
            JFileChooser eArquivoXmlEvento = new JFileChooser();
            OpenFileFilter filterc = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            eArquivoXmlEvento.addChoosableFileFilter(filterc);
            eArquivoXmlEvento.setFileFilter(filterc);
            
            if (eArquivoXmlEvento.showOpenDialog(this) != JFileChooser.APPROVE_OPTION){
                return;
            }
            
            String destinatario = JOptionPane.showInputDialog(this, "Digite o email do destinatario", 
                    "Envio email", JOptionPane.PLAIN_MESSAGE);
            
            acbrNFCom.enviarEmailEvento(destinatario,
                                eArquivoXmlNFCom.getSelectedFile().getAbsolutePath(),
                                eArquivoXmlEvento.getSelectedFile().getAbsolutePath(),
                                true,
                                txtAssunto.getText(),
                                "",
                                "",
                                txtMensagem.getText());  
            rtbRespostas.append("Enviado."); 
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btnEnviarEmailEventoActionPerformed

    private void btnEnviarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarEventoActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try {
            
             String aLote = JOptionPane.showInputDialog("Digite o lote");
             int lote = Integer.parseInt(aLote);
             
             String ret = acbrNFCom.enviarEvento();
             rtbRespostas.append(ret);
        } catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnEnviarEventoActionPerformed

    private void btnLimparListaEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparListaEventoActionPerformed

        try{
            acbrNFCom.limparListaEventos();
            rtbRespostas.append("Lista limpa."); 
        }catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnLimparListaEventoActionPerformed

    private void btnImprimirEventoPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirEventoPDFActionPerformed

        try {
            JFileChooser eArquivoXmlNFCom = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            eArquivoXmlNFCom.addChoosableFileFilter(filter);
            eArquivoXmlNFCom.setFileFilter(filter);
            
            if (eArquivoXmlNFCom.showOpenDialog(this) != JFileChooser.APPROVE_OPTION){
                return;
            }
            
            JFileChooser eArquivoXmlEvento = new JFileChooser();
            OpenFileFilter filterc = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            eArquivoXmlEvento.addChoosableFileFilter(filterc);
            eArquivoXmlEvento.setFileFilter(filterc);
            
            if (eArquivoXmlEvento.showOpenDialog(this) != JFileChooser.APPROVE_OPTION){
                return;
            }
            
            acbrNFCom.imprimirEventoPDF(eArquivoXmlNFCom.getSelectedFile().getAbsolutePath(),eArquivoXmlEvento.getSelectedFile().getAbsolutePath());
            rtbRespostas.append("Gerado com sucesso."); 
            
        }catch (Exception ex){
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnImprimirEventoPDFActionPerformed

    private void btnImprimirInutilizacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirInutilizacaoActionPerformed

        try{
            
            JFileChooser eArquivoXml = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            eArquivoXml.addChoosableFileFilter(filter);
            eArquivoXml.setFileFilter(filter);
            
            if (eArquivoXml.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            
            // acbrNFCom.imprimirInutilizacao(eArquivoXml.getSelectedFile().getAbsolutePath());
            rtbRespostas.append("Método imprimirInutilizacao não disponível em NFCom");
            rtbRespostas.append("Impresso com sucesso.");            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnImprimirInutilizacaoActionPerformed

    private void btnImprimirInutilizacaoPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirInutilizacaoPDFActionPerformed
        
        try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            
            // acbrNFCom.imprimirInutilizacaoPDF(chooser.getSelectedFile().getAbsolutePath());
            rtbRespostas.append("Método imprimirInutilizacaoPDF não disponível em NFCom");
            rtbRespostas.append("Impresso com sucesso.");     
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImprimirInutilizacaoPDFActionPerformed

    private void btnDFePorChaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDFePorChaveActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try{ 
          String codUf = JOptionPane.showInputDialog("Digite o codigo da UF");
          String cnpj = JOptionPane.showInputDialog("CNPJ do autor");
          String chave = JOptionPane.showInputDialog("Digite o modelo do documento");
          
          int uf = Integer.parseInt(codUf);
          
          // String ret= acbrNFCom.distribuicaoDFeporChave(uf, cnpj, chave);
          String ret = "Método distribuicaoDFeporChave não disponível em NFCom";
          rtbRespostas.append(ret);   
          
        }catch (Exception ex){
             Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDFePorChaveActionPerformed

    private void btnDFePorNSUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDFePorNSUActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try{ 
          String codUf = JOptionPane.showInputDialog("Digite o codigo da UF");
          String cnpj = JOptionPane.showInputDialog("CNPJ do autor");
          String nsu = JOptionPane.showInputDialog("Numero do NSU");
          
          int uf = Integer.parseInt(codUf);
          
          // String ret = acbrNFCom.distribuicaoDFeporChave(uf, cnpj, nsu);
          String ret = "Método distribuicaoDFeporChave não disponível em NFCom";
          rtbRespostas.append(ret);   
          
        }catch (Exception ex){
             Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnDFePorNSUActionPerformed

    private void btnDFePorUltNSUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDFePorUltNSUActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
       try{ 
          String codUf = JOptionPane.showInputDialog("Digite o codigo da UF");
          String cnpj = JOptionPane.showInputDialog("CNPJ do autor");
          String nsu = JOptionPane.showInputDialog("Numero do último NSU");
          
          int uf = Integer.parseInt(codUf);
          
          // String ret = acbrNFCom.distribuicaoDFeporUltNSU(uf, cnpj, nsu);
          String ret = "Método distribuicaoDFeporUltNSU não disponível em NFCom";
          rtbRespostas.append(ret);   
          
        }catch (Exception ex){
             Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    }//GEN-LAST:event_btnDFePorUltNSUActionPerformed

    private void btnConsultarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarCadastroActionPerformed

        if (!validacao()){
            JOptionPane.showMessageDialog(null,"Erro verifique as configurações do certificado","Erro", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        boolean ie;
        
        try{
            
          String codUf = JOptionPane.showInputDialog("Digite o codigo da UF");
          String numDoc = JOptionPane.showInputDialog("Digite o número do documento");
          
          int opcao = JOptionPane.showConfirmDialog(null, "O documento é uma inscrição estadual ?", "Aviso", JOptionPane.YES_NO_OPTION);

          if (opcao == 0) { 
            ie = false;
            } else {
            ie = true;
            }
          
          // String ret= acbrNFCom.consultaCadastro(codUf, numDoc, ie);
          String ret = "Método consultaCadastro não disponível em NFCom";
          rtbRespostas.append(ret);   
          
        }catch (Exception ex){
             Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnConsultarCadastroActionPerformed

    private void btnArqSalvarRetornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArqSalvarRetornoActionPerformed
        try{          
            JFileChooser chooser = new JFileChooser(); 
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Selecione o diretorio");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);           
     
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;            
            txtSalvarXMLDistribuicao.setText(chooser.getSelectedFile().toString());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "Download.PathDownload", txtSalvarXMLDistribuicao.getText());
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnArqSalvarRetornoActionPerformed
    
    private void btnGerarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarXMLActionPerformed
        Component root = this;
        root.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("ini", "Arquivo Ini NFCom (*.ini)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);

            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            acbrNFCom.limparLista();
            acbrNFCom.carregarIni(chooser.getSelectedFile().getAbsolutePath());

            String ret = acbrNFCom.obterXml(0);
            acbrNFCom.gravarXml(0);
            rtbRespostas.append(ret);

        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            this.setCursor(Cursor.getDefaultCursor());
        }
    }//GEN-LAST:event_btnGerarXMLActionPerformed

    private void btnSalvarPDFStreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPDFStreamActionPerformed

        try{
            JFileChooser chooser = new JFileChooser();
            OpenFileFilter filter = new OpenFileFilter("xml", "Arquivo Xml NFCom (*.xml)");
            chooser.addChoosableFileFilter(filter);
            chooser.setFileFilter(filter);
            
            if (chooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) return;
            acbrNFCom.limparLista();
            acbrNFCom.carregarXml(chooser.getSelectedFile().getAbsolutePath());
            
            acbrNFCom.salvarPDF();
            rtbRespostas.append("PDF salvo com sucesso.");          
            
            rtbRespostas.append("\n Gerado com sucesso.");            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarPDFStreamActionPerformed

    private void txtSchemaPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSchemaPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSchemaPathActionPerformed

    private void cmbVersaoDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVersaoDFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbVersaoDFActionPerformed

    private void loadConfig() {
        try {
            
            acbrNFCom.configLer();
            
            //Config Geral
            // ckbAttXML.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "AtualizarXMLCancelado").equals("1"));
            // AtualizarXMLCancelado não existe na sessão NFCom
            ckbExibirErroSchema.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "ExibirErroSchema").equals("1"));
            txtFormatoAlerta.setText(acbrNFCom.configLerValor(ACBrSessao.NFCom, "FormatoAlerta"));
            cmbFormaEmissao.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.NFCom, "FormaEmissao")));
            //cmbModeloDocumento.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.NFCom, "ModeloDF")));   
            // ModeloDF não existe na sessão NFCom
            cmbVersaoDF.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.NFCom, "VersaoDF")));
            ckbRetirarAcentos.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "RetirarAcentos").equals("1"));
            ckbSalvar.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "SalvarGer").equals("1"));
            txtLogs.setText(acbrNFCom.configLerValor(ACBrSessao.NFCom, "PathSalvar"));
            txtSchemaPath.setText(acbrNFCom.configLerValor(ACBrSessao.NFCom, "PathSchemas"));
            
            //Config WebService
            cmbUfDestino.setSelectedItem(acbrNFCom.configLerValor(ACBrSessao.DFe, "UF"));
            cmbSSlType.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.NFCom, "SSLType")));
            nudTimeOut.setValue(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.NFCom, "Timeout")));
            
            String ambiente = acbrNFCom.configLerValor(ACBrSessao.NFCom, "Ambiente");            
            rdbHomologacao.setSelected("1".equals(ambiente));
            rdbProducao.setSelected("0".equals(ambiente));            
            
            ckbVisualizar.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "Visualizar").equals("1"));
            ckbSalvarSOAP.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "SalvarWS").equals("1"));
            ckbAjustarAut.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "AjustaAguardaConsultaRet").equals("1"));
            nudAguardar.setValue(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.NFCom, "AguardarConsultaRet")));
            nudTentativas.setValue(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.NFCom, "Tentativas")));
            nudIntervalos.setValue(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.NFCom, "IntervaloTentativas")));
            
            txtProxyServidor.setText(acbrNFCom.configLerValor(ACBrSessao.Proxy, "Servidor"));
            
            String Value = acbrNFCom.configLerValor(ACBrSessao.Proxy, "Porta");        
            if(Value.matches("-?\\d+"))
              nudProxyPorta.setValue(Integer.parseInt(Value));           
            
            txtProxyUsuario.setText(acbrNFCom.configLerValor(ACBrSessao.Proxy, "Usuario"));
            txtProxySenha.setText(acbrNFCom.configLerValor(ACBrSessao.Proxy, "Senha"));
            
            //Config Certificado
            cmbCrypt.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.DFe, "SSLCryptLib")));            
            cmbHttp.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.DFe, "SSLHttpLib")));    
            cmbXmlSign.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.DFe, "SSLXmlSignLib")));
            txtCertPath.setText(acbrNFCom.configLerValor(ACBrSessao.DFe, "ArquivoPFX"));
            txtCertPassword.setText(acbrNFCom.configLerValor(ACBrSessao.DFe, "Senha"));
            txtCertNumero.setText(acbrNFCom.configLerValor(ACBrSessao.DFe, "NumeroSerie"));
            txtDadosPFX.setText(acbrNFCom.configLerValor(ACBrSessao.DFe, "DadosPFX"));
            
            //Config Arquivos
            ckbSalvarArqs.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "SalvarArq").equals("1"));
            ckbPastaMensal.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "SepararPorMes").equals("1"));
            ckbAdicionaLiteral.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "AdicionarLiteral").equals("1"));     
            //ckbEmissaoPathNFCom.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "EmissaoPathNFCom").equals("1"));
            ckbSalvaPathEvento.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "SalvarEvento").equals("1"));            
            ckbSepararPorCNPJ.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "SepararPorCNPJ").equals("1"));
            ckbSepararPorModelo.setSelected(acbrNFCom.configLerValor(ACBrSessao.NFCom, "SepararPorModelo").equals("1"));
            //txtArqNFCom.setText(acbrNFCom.configLerValor(ACBrSessao.NFCom, "PathNFCom"));
            // txtArqInu.setText(acbrNFCom.configLerValor(ACBrSessao.NFCom, "PathInu"));
            // PathInu não existe na sessão NFCom
            txtArqEvento.setText(acbrNFCom.configLerValor(ACBrSessao.NFCom, "PathEvento"));
            txtSalvarXMLDistribuicao.setText(acbrNFCom.configLerValor(ACBrSessao.NFCom, "Download.PathDownload"));
            
            //Config Doc Auxiliar
            txtLogomarca.setText(acbrNFCom.configLerValor(ACBrSessao.DANFCom, "PathLogo"));
            
          //  String tipoDaNFCom = acbrNFCom.configLerValor(ACBrSessao.DANFCom, "TipoDANFCom");            
            //rdbRetrato.setSelected("1".equals(tipoDaNFCom));
            //rdbPaisagem.setSelected("2".equals(tipoDaNFCom));
            
          //  String TipoRelatorioBobina = acbrNFCom.configLerValor(ACBrSessao.DANFComNFCe, "TipoRelatorioBobina");            
            //rdbFortes.setSelected("0".equals(TipoRelatorioBobina));
            //rdbEscPos.setSelected("1".equals(TipoRelatorioBobina));
            //rdbFortesA4.setSelected("2".equals(TipoRelatorioBobina));
            // DANFComNFCe não existe na sessão NFCom
            
            cmbModelo.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "Modelo")));
            cmbPorta.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "Porta")));
            cmbPagCodigo.setSelectedIndex(Integer.parseInt(acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "PaginaDeCodigo")));
            
            Value = acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "ColunasFonteNormal");
            if(Value.matches("-?\\d+"))
                nudColunas.setValue(Integer.parseInt(Value));
            
            Value = acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "EspacoEntreLinhas");
            if(Value.matches("-?\\d+"))
                nudEspacos.setValue(Integer.parseInt(Value));
            
            Value = acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "LinhasBuffer");
            if(Value.matches("-?\\d+"))
                nudBuffer.setValue(Integer.parseInt(Value));
            
            Value = acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "LinhasEntreCupons");
            if(Value.matches("-?\\d+"))
                nudLinhasPular.setValue(Integer.parseInt(Value));
            
            cbxControlePorta.setSelected(acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "ControlePorta").equals("1"));
            cbxTraduzirTags.setSelected(acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "TraduzirTags").equals("1"));
            cbxCortarPapel.setSelected(acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "CortaPapel").equals("1"));
            cbxIgnorarTags.setSelected(acbrNFCom.configLerValor(ACBrSessao.PosPrinter, "IgnorarTags").equals("1"));
            
            //Config E-mail
            txtNome.setText(acbrNFCom.configLerValor(ACBrSessao.Email, "Nome"));
            txtEmail.setText(acbrNFCom.configLerValor(ACBrSessao.Email, "Conta"));
            txtUsuario.setText(acbrNFCom.configLerValor(ACBrSessao.Email, "Usuario"));
            txtSenha.setText(acbrNFCom.configLerValor(ACBrSessao.Email, "Senha"));
            txtHost.setText(acbrNFCom.configLerValor(ACBrSessao.Email, "Servidor"));
            
            Value = acbrNFCom.configLerValor(ACBrSessao.Email, "Porta");
            if(Value.matches("-?\\d+"))
                nudPorta.setValue(Integer.parseInt(Value));
            
            ckbSSL.setSelected(acbrNFCom.configLerValor(ACBrSessao.Email, "SSL").equals("1"));            
            ckbTLS.setSelected(acbrNFCom.configLerValor(ACBrSessao.Email, "TLS").equals("1"));
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void saveConfig() {
        try {
            
            //Config Geral
            // acbrNFCom.configGravarValor(ACBrSessao.NFCom, "AtualizarXMLCancelado", ckbAttXML.isSelected()? "1" : "0");
            // AtualizarXMLCancelado não existe na sessão NFCom
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "ExibirErroSchema", ckbExibirErroSchema.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "FormatoAlerta", txtFormatoAlerta.getText());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "FormaEmissao", cmbFormaEmissao.getSelectedIndex());
            // acbrNFCom.configGravarValor(ACBrSessao.NFCom, "ModeloDF", cmbModeloDocumento.getSelectedIndex());
            // ModeloDF não existe na sessão NFCom
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "VersaoDF", cmbVersaoDF.getSelectedIndex());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "RetirarAcentos", ckbRetirarAcentos.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "SalvarWS", ckbSalvar.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathSalvar", txtLogs.getText());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathSchemas", txtSchemaPath.getText());
                        
            // Config WebService
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "UF", cmbUfDestino.getSelectedItem().toString());
            
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "SSLType", cmbSSlType.getSelectedIndex());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "Timeout", nudTimeOut.getValue().toString());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "Ambiente", rdbHomologacao.isSelected() ? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "Visualizar", ckbVisualizar.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "SalvarWS", ckbSalvarSOAP.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "AjustaAguardaConsultaRet", ckbAjustarAut.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "AguardarConsultaRet", nudAguardar.getValue().toString());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "Tentativas", nudTentativas.getValue().toString());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "IntervaloTentativas", nudIntervalos.getValue().toString());
            
            acbrNFCom.configGravarValor(ACBrSessao.Proxy, "Servidor", txtProxyServidor.getText());
            acbrNFCom.configGravarValor(ACBrSessao.Proxy, "Porta", nudProxyPorta.getValue().toString());
            acbrNFCom.configGravarValor(ACBrSessao.Proxy, "Usuario", txtProxyUsuario.getText());
            acbrNFCom.configGravarValor(ACBrSessao.Proxy, "Senha", txtProxySenha.getText());
            
            //Config Certificado
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "SSLCryptLib", cmbCrypt.getSelectedIndex());            
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "SSLHttpLib", cmbHttp.getSelectedIndex());           
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "SSLXmlSignLib", cmbXmlSign.getSelectedIndex());            
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "ArquivoPFX", txtCertPath.getText());     
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "Senha", new String(txtCertPassword.getPassword()));
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "NumeroSerie", txtCertNumero.getText());
            acbrNFCom.configGravarValor(ACBrSessao.DFe, "DadosPFX", txtDadosPFX.getText());            
            
            //Config Arquivos
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "SalvarGer", ckbSalvarArqs.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "SepararPorMes",ckbPastaMensal.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "AdicionarLiteral", ckbAdicionaLiteral.isSelected()? "1" : "0");
            //acbrNFCom.configGravarValor(ACBrSessao.NFCom, "EmissaoPathNFCom", ckbEmissaoPathNFCom.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "SalvarArq", ckbSalvaPathEvento.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "SepararPorCNPJ", ckbSepararPorCNPJ.isSelected()? "1" : "0");
            //acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathNFCom", txtArqNFCom.getText());
                        // acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathInu", txtArqInu.getText());
            // PathInu não existe na sessão NFCom
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "PathEvento", txtArqEvento.getText());
            acbrNFCom.configGravarValor(ACBrSessao.NFCom, "Download.PathDownload", txtSalvarXMLDistribuicao.getText());
            
            //Config Doc Auxiliar
            acbrNFCom.configGravarValor(ACBrSessao.DANFCom, "PathLogo", txtLogomarca.getText());
            //acbrNFCom.configGravarValor(ACBrSessao.DANFCom, "TipoDANFCom", rdbRetrato.isSelected() ? "1" : "2");
            //acbrNFCom.configGravarValor(ACBrSessao.DANFComNFCe, "TipoRelatorioBobina", rdbFortes.isSelected() ? "0" : (rdbEscPos.isSelected() ? "1" : "2"));
            // DANFComNFCe não existe na sessão NFCom
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "Modelo", cmbModelo.getSelectedIndex());
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "Porta", cmbPorta.getSelectedIndex());
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "ColunasFonteNormal", nudColunas.getValue().toString());
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "EspacoEntreLinhas", nudEspacos.getValue().toString());
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "LinhasBuffer", nudBuffer.getValue().toString());
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "LinhasEntreCupons", nudLinhasPular.getValue().toString());
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "ControlePorta", cbxControlePorta.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "CortaPapel", cbxCortarPapel.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "TraduzirTags", cbxTraduzirTags.isSelected()? "1" : "0");  
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "IgnorarTags", cbxIgnorarTags.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.PosPrinter, "PaginaDeCodigo", cmbPagCodigo.getSelectedIndex());
            
            //Config E-mail
            acbrNFCom.configGravarValor(ACBrSessao.Email, "Nome", txtNome.getText());            
            acbrNFCom.configGravarValor(ACBrSessao.Email, "Conta", txtEmail.getText());           
            acbrNFCom.configGravarValor(ACBrSessao.Email, "Usuario", txtUsuario.getText());
            acbrNFCom.configGravarValor(ACBrSessao.Email, "Senha", new String(txtSenha.getPassword()));            
            acbrNFCom.configGravarValor(ACBrSessao.Email, "Servidor", txtHost.getText());            
            acbrNFCom.configGravarValor(ACBrSessao.Email, "Porta", nudPorta.getValue().toString());            
            acbrNFCom.configGravarValor(ACBrSessao.Email, "SSL", ckbSSL.isSelected()? "1" : "0");
            acbrNFCom.configGravarValor(ACBrSessao.Email, "TLS", ckbTLS.isSelected()? "1" : "0");
            
            acbrNFCom.configGravar();            
            
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArqEvento;
    private javax.swing.JButton btnArqInu;
    private javax.swing.JButton btnArqNFCom;
    private javax.swing.JButton btnArqSalvarRetorno;
    private javax.swing.JButton btnAssinar;
    private javax.swing.JButton btnCancelarNFCom;
    private javax.swing.JButton btnCarregarConfiguracoes;
    private javax.swing.JButton btnCarregarEvento;
    private javax.swing.JButton btnCarregarIni;
    private javax.swing.JButton btnCarregarXml;
    private javax.swing.JButton btnConsultaChave;
    private javax.swing.JButton btnConsultaXml;
    private javax.swing.JButton btnConsultarCadastro;
    private javax.swing.JButton btnConsultarRecibo;
    private javax.swing.JButton btnCriarEnviar;
    private javax.swing.JButton btnDFePorChave;
    private javax.swing.JButton btnDFePorNSU;
    private javax.swing.JButton btnDFePorUltNSU;
    private javax.swing.JButton btnEnviarAssincrono;
    private javax.swing.JButton btnEnviarEmail;
    private javax.swing.JButton btnEnviarEmailEvento;
    private javax.swing.JButton btnEnviarEvento;
    private javax.swing.JButton btnEnviarSincrono;
    private javax.swing.JButton btnGerarChave;
    private javax.swing.JButton btnGerarXML;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnImprimirEvento;
    private javax.swing.JButton btnImprimirEventoPDF;
    private javax.swing.JButton btnImprimirInutilizacao;
    private javax.swing.JButton btnImprimirInutilizacaoPDF;
    private javax.swing.JButton btnImprimirPDF;
    private javax.swing.JButton btnInutilizar;
    private javax.swing.JButton btnLimparLista;
    private javax.swing.JButton btnLimparListaEvento;
    private javax.swing.JButton btnLogomarca;
    private javax.swing.JButton btnObterCertificados;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvarPDFStream;
    private javax.swing.JButton btnSelecionarCertificado;
    private javax.swing.JButton btnSelectLog;
    private javax.swing.JButton btnSelectSchema;
    private javax.swing.JButton btnStatusServ;
    private javax.swing.JButton btnValidarRegra;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JCheckBox cbxControlePorta;
    private javax.swing.JCheckBox cbxCortarPapel;
    private javax.swing.JCheckBox cbxIgnorarTags;
    private javax.swing.JCheckBox cbxTraduzirTags;
    private javax.swing.JCheckBox ckbAdicionaLiteral;
    private javax.swing.JCheckBox ckbAjustarAut;
    private javax.swing.JCheckBox ckbAttXML;
    private javax.swing.JPanel ckbAtualizarXML;
    private javax.swing.JCheckBox ckbEmissaoPathNFCom;
    private javax.swing.JCheckBox ckbExibirErroSchema;
    private javax.swing.JCheckBox ckbPastaMensal;
    private javax.swing.JCheckBox ckbRetirarAcentos;
    private javax.swing.JCheckBox ckbSSL;
    private javax.swing.JCheckBox ckbSalvaPathEvento;
    private javax.swing.JCheckBox ckbSalvar;
    private javax.swing.JCheckBox ckbSalvarArqs;
    private javax.swing.JCheckBox ckbSalvarSOAP;
    private javax.swing.JCheckBox ckbSepararPorCNPJ;
    private javax.swing.JCheckBox ckbSepararPorModelo;
    private javax.swing.JCheckBox ckbTLS;
    private javax.swing.JCheckBox ckbVisualizar;
    private javax.swing.JComboBox<String> cmbCrypt;
    private javax.swing.JComboBox<String> cmbFormaEmissao;
    private javax.swing.JComboBox<String> cmbHttp;
    private javax.swing.JComboBox<String> cmbModelo;
    private javax.swing.JComboBox<String> cmbModeloDocumento;
    private javax.swing.JComboBox<String> cmbPagCodigo;
    private javax.swing.JComboBox<String> cmbPorta;
    private javax.swing.JComboBox<String> cmbSSlType;
    private javax.swing.JComboBox<String> cmbUfDestino;
    private javax.swing.JComboBox<String> cmbVersaoDF;
    private javax.swing.JComboBox<String> cmbXmlSign;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel lblBuffer;
    private javax.swing.JLabel lblColunas;
    private javax.swing.JLabel lblEspacos;
    private javax.swing.JLabel lblLinhasPular;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblPagCodigo;
    private javax.swing.JLabel lblPorta;
    private javax.swing.JSpinner nudAguardar;
    private javax.swing.JSpinner nudBuffer;
    private javax.swing.JSpinner nudColunas;
    private javax.swing.JSpinner nudEspacos;
    private javax.swing.JSpinner nudIntervalos;
    private javax.swing.JSpinner nudLinhasPular;
    private javax.swing.JSpinner nudPorta;
    private javax.swing.JSpinner nudProxyPorta;
    private javax.swing.JSpinner nudTentativas;
    private javax.swing.JSpinner nudTimeOut;
    private javax.swing.JRadioButton rdbEscPos;
    private javax.swing.JRadioButton rdbFortes;
    private javax.swing.JRadioButton rdbFortesA4;
    private javax.swing.JRadioButton rdbHomologacao;
    private javax.swing.JRadioButton rdbPaisagem;
    private javax.swing.JRadioButton rdbProducao;
    private javax.swing.JRadioButton rdbRetrato;
    private javax.swing.JTextArea rtbRespostas;
    private javax.swing.JTextField txtArqEvento;
    private javax.swing.JTextField txtArqInu;
    private javax.swing.JTextField txtArqNFCom;
    private javax.swing.JTextField txtAssunto;
    private javax.swing.JTextField txtCertNumero;
    private javax.swing.JPasswordField txtCertPassword;
    private javax.swing.JTextField txtCertPath;
    private javax.swing.JTextField txtDadosPFX;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFormatoAlerta;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtLogomarca;
    private javax.swing.JTextField txtLogs;
    private javax.swing.JTextField txtMensagem;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtProxySenha;
    private javax.swing.JTextField txtProxyServidor;
    private javax.swing.JTextField txtProxyUsuario;
    private javax.swing.JTextField txtSalvarXMLDistribuicao;
    private javax.swing.JTextField txtSchemaPath;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
